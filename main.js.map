{"version":3,"sources":["webpack://mesto/./src/components/Card.js","webpack://mesto/./src/components/FormValidator.js","webpack://mesto/./src/components/Section.js","webpack://mesto/./src/components/Popup.js","webpack://mesto/./src/components/PopupWithImage.js","webpack://mesto/./src/components/PopupWithForm.js","webpack://mesto/./src/components/UserInfo.js","webpack://mesto/./src/components/Api.js","webpack://mesto/./src/utils/constants.js","webpack://mesto/./src/pages/index.js"],"names":["Card","data","userId","cardTemplateSelector","handleCardClick","handleDeleteClick","likeCardCb","unlikeCardCb","likeCount","this","_name","name","_link","link","_data","_cardTemplateSelector","_handleCardClick","_likesCount","_handleDeleteClick","_userId","_handleLike","_handleUnlike","document","querySelector","content","cloneNode","_element","_getTemplate","cardTitle","cardImage","likesCountElement","_likeBtn","_delBtn","owner","_id","remove","likes","find","item","_toggleLikeBtn","textContent","src","alt","_setEventListeners","addEventListener","_handleLikeClick","likeButton","classList","contains","toggle","FormValidator","config","form","_formSelector","formSelector","_inputSelector","inputSelector","_submitButtonSelector","submitButtonSelector","_inputErrorClass","inputErrorClass","_errorClass","errorClass","_form","_inputList","Array","from","querySelectorAll","_button","evt","preventDefault","forEach","input","_checkValidation","checkButtonState","validity","valid","_hideInputError","_showInputError","_hasInvalidInput","disabled","some","errorSpan","id","validationMessage","add","Section","containerSelector","items","renderer","_items","_renderer","element","card","append","prepend","Popup","popupSelector","key","close","_popupSelector","popupElement","_handleEscClose","bind","removeEventListener","target","PopupWithImage","_photoViewImage","_photoViewCaption","PopupWithForm","submitFormCb","_submitFormCb","_formElement","submitBtn","_inputs","setEventListeners","result","value","cardData","_getInputValues","reset","UserInfo","userNameElement","userBioElement","userAvatarElement","_userName","_userBio","_userAvatarElement","_userNameElement","_userBioElement","userName","userBio","userAvatar","username","userbio","userID","_userID","setAvatar","Api","options","_url","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_checkResponse","profileData","method","body","JSON","stringify","about","linkAvatar","avatar","profile","addBtn","editBtn","btnEditAvatar","formPopupProfile","inputNamePopupProfile","inputBioPopupProfile","formPopupCard","formUpdateAvatar","api","authorization","all","getUserInfo","getInitialCards","myUserId","userData","userInfo","setUserInfo","cardSection","createCard","appendItem","renderAll","popupAddCard","addCard","updateCardData","prependItem","catch","err","console","log","finally","popupEditProfile","popupViewImage","popupUpdateAvatar","updateAvatar","popupConfirm","confirmData","deleteCard","open","setData","likeCard","length","unlikeCard","generateCard","formCardElement","enableValidation","formProfileElement","clearInputsErrors","userProfileData","alert"],"mappings":"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","file":"main.js","sourcesContent":["export default class Card {\n  constructor(\n      data,\n      userId,\n      cardTemplateSelector,\n      handleCardClick,\n      handleDeleteClick,\n      likeCardCb,\n      unlikeCardCb,\n      likeCount,\n\n  )\n\n  {\n    this._name = data.name;\n    this._link = data.link;\n    this._data = data;\n    this._cardTemplateSelector = cardTemplateSelector;\n    this._handleCardClick = handleCardClick;\n    this._likesCount = likeCount;\n    this._handleDeleteClick = handleDeleteClick;\n    this._userId = userId;\n    this._handleLike = likeCardCb;\n    this._handleUnlike = unlikeCardCb;\n\n  }\n\n  _getTemplate() {\n    return  document\n      .querySelector(this._cardTemplateSelector)\n      .content.querySelector('.photo-grid__element')\n      .cloneNode(true);\n  }\n\n  generateCard() {\n    this._element = this._getTemplate();\n\n    const cardTitle = this._element.querySelector('.photo-grid__title');\n    const cardImage = this._element.querySelector('.photo-grid__image');\n    this.likesCountElement = this._element.querySelector('.photo-grid__like-count');\n    this._likeBtn = this._element.querySelector('.photo-grid__like-btn');\n\n    this._delBtn = this._element.querySelector('.photo-grid__del-btn');\n\n    if (this._userId !== this._data.owner._id){\n      this._delBtn.remove()\n    }\n\n    if (this._data.likes.find(item => item._id === this._userId)) {\n      this._toggleLikeBtn(this._likeBtn);\n    }\n\n    cardTitle.textContent = this._name;\n    cardImage.src = this._link;\n    cardImage.alt = this._name;\n    this.likesCountElement.textContent = this._likesCount;\n\n    this._setEventListeners();\n\n    return this._element;\n  }\n\n  _setEventListeners() {\n\n    const cardImage = this._element.querySelector('.photo-grid__image');\n\n    this._likeBtn.addEventListener('click', () => {\n      this._handleLikeClick(this._likeBtn);\n    });\n\n    this._delBtn.addEventListener('click', () => {\n      this._handleDeleteClick(this._data);\n    });\n\n    cardImage.addEventListener('click', () => {\n      this._handleCardClick(this._data);\n    });\n  }\n\n  _handleLikeClick(likeButton) {\n    this._toggleLikeBtn(likeButton);\n\n    if (this._likeBtn.classList.contains('like-btn_active')) {\n      this._handleLike(this._data);\n    }\n    else {\n      this._handleUnlike(this._data);\n    }\n\n  }\n\n  _toggleLikeBtn(likeButton) {\n    likeButton.classList.toggle('like-btn_active');\n  }\n\n  deleteCard() {\n    this._element.remove();\n    this._element = null;\n\n  }\n}\n","export default class FormValidator {\n  constructor(config, form) {\n    this._formSelector = config.formSelector;\n    this._inputSelector = config.inputSelector;\n    this._submitButtonSelector = config.submitButtonSelector;\n    this._inputErrorClass = config.inputErrorClass;\n    this._errorClass = config.errorClass;\n    this._form = form;\n\n    // Подкключаем все инпуты в форме и конпку\n    this._inputList = Array.from(\n      this._form.querySelectorAll(this._inputSelector)\n    );\n    this._button = this._form.querySelector(this._submitButtonSelector);\n  }\n\n  enableValidation() {\n    this._setEventListeners();\n  }\n\n  _setEventListeners() {\n    this._form.addEventListener('submit', (evt) => {\n      evt.preventDefault();\n    });\n\n    this._inputList.forEach((input) => {\n      input.addEventListener('input', () => {\n        this._checkValidation(input);\n        this.checkButtonState();\n      });\n    });\n  }\n\n  _checkValidation(input) {\n    if (!input.validity.valid) {\n      this._showInputError(input);\n    } else {\n      this._hideInputError(input);\n    }\n  }\n\n  checkButtonState() {\n    if (this._hasInvalidInput()) {\n      this._button.disabled = true;\n    } else {\n      this._button.disabled = false;\n    }\n  }\n\n  _hasInvalidInput() {\n    return this._inputList.some((input) => !input.validity.valid);\n  }\n\n  _showInputError(input) {\n    // Подключаем span для вывода ошибки\n    const errorSpan = this._form.querySelector(`#${input.id}-error`);\n\n    errorSpan.textContent = input.validationMessage;\n\n    input.classList.add(this._inputErrorClass);\n    errorSpan.classList.add(this._errorClass);\n  }\n\n  _hideInputError(input) {\n    const errorSpan = this._form.querySelector(`#${input.id}-error`);\n\n    errorSpan.textContent = '';\n\n    input.classList.remove(this._inputErrorClass);\n    errorSpan.classList.remove(this._errorClass);\n  }\n\n  clearInputsErrors() {\n    this._inputList.forEach((input) => this._hideInputError(input));\n  }\n}\n","export class Section {\n  constructor({ items, renderer }, containerSelector) {\n    this._items = items;\n    this._renderer = renderer;\n    this.element = document.querySelector(containerSelector);\n  }\n\n  renderAll () {\n    this._items.forEach((item) => this._renderer(item));\n  }\n\n  appendItem (card) {\n    this.element.append(card);\n  }\n\n  prependItem (card) {\n    this.element.prepend(card);\n  }\n\n}\n\n\n\n","export class Popup {\n  constructor(popupSelector) {\n    this._popupSelector = popupSelector;\n    this.popupElement = document.querySelector(popupSelector);\n    this._handleEscClose = this._handleEscClose.bind(this);\n  }\n\n  open() {\n    this.popupElement.classList.add('popup_opened');\n    document.addEventListener('keydown', this._handleEscClose);\n  }\n\n  close() {\n    this.popupElement.classList.remove('popup_opened');\n    document.removeEventListener('keydown', this._handleEscClose);\n  }\n\n  _handleEscClose = (evt) => {\n    if (evt.key === 'Escape') {\n      this.close();\n    }\n  };\n\n  setEventListeners() {\n    const closeBtn = this.popupElement.querySelector('.popup__close-btn');\n    closeBtn.addEventListener('click', () => {\n      this.close();\n    });\n\n    this.popupElement.addEventListener('mousedown', (evt) => {\n      if (evt.target.classList.contains('popup_opened')) {\n        this.close();\n      }\n    });\n  }\n}\n","import { Popup } from './Popup.js';\n\nexport class PopupWithImage extends Popup {\n  constructor(popupSelector) {\n    super(popupSelector);\n\n    this._photoViewImage = this.popupElement.querySelector('.popup__image');\n    this._photoViewCaption = this.popupElement.querySelector('.popup__caption');\n  }\n\n  open({ name, link }) {\n    super.open();\n\n    this._photoViewImage.src = link;\n    this._photoViewCaption.textContent = name;\n    this._photoViewImage.alt = name;\n  }\n}\n","import { Popup } from './Popup.js';\n\nexport class PopupWithForm extends Popup {\n  constructor(popupSelector, submitFormCb) {\n    super(popupSelector);\n    this._submitFormCb = submitFormCb;\n    this._formElement = this.popupElement.querySelector('.popup__form');\n    this.submitBtn = this._formElement.querySelector('.popup__save-btn');\n    this._inputs = Array.from(this._formElement.querySelectorAll('.popup__input'));\n\n    this.setEventListeners();\n  }\n\n  _getInputValues() {\n    const result = {};\n\n    this._inputs.forEach((input) => {\n      result[input.name] = input.value;\n    });\n\n    return result;\n  }\n\n  setEventListeners() {\n    super.setEventListeners();\n\n    this._formElement.addEventListener('submit', (evt) => {\n      evt.preventDefault();\n\n      const cardData = this._getInputValues();\n      this._submitFormCb(cardData);\n    });\n  }\n\n  close() {\n    super.close();\n    this._formElement.reset();\n  }\n\n  setData(data, card) {\n    this.data = data;\n    this.card = card;\n\n  }\n\n}\n","export class UserInfo {\n\n  _userID\n\n  constructor({ userNameElement, userBioElement, userAvatarElement }) {\n    this._userName = userNameElement;\n    this._userBio = userBioElement;\n    this._userAvatarElement = userAvatarElement;\n\n    this._userNameElement = document.querySelector(this._userName);\n    this._userBioElement = document.querySelector(this._userBio);\n    this._userAvatarElement = document.querySelector(this._userAvatarElement);\n  }\n\n  getUserInfo() {\n    return {\n      userName: this._userNameElement.textContent,\n      userBio: this._userBioElement.textContent,\n      userAvatar: this._userAvatarElement.src,\n\n    };\n  }\n  setUserInfo( username, userbio, userAvatar, userID ) {\n    this._userNameElement.textContent = username;\n    this._userBioElement.textContent = userbio;\n    this._userID = userID;\n\n    if (userAvatar) {\n      this.setAvatar(userAvatar);\n    }\n\n  }\n\n  setAvatar (userAvatar) {\n    this._userAvatarElement.src = userAvatar;\n  }\n\n}\n","export class Api {\n    constructor(options) {\n        this._url = options.baseUrl;\n        this._headers = options.headers;\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка ${res.status}`);\n    }\n\n    getInitialCards() {\n        return fetch(`${this._url}/cards`, {\n            headers: this._headers\n        })\n            .then(this._checkResponse)\n    }\n\n    getUserInfo() {\n        return fetch(`${this._url}/users/me`, {\n            headers: this._headers\n        })\n        .then(this._checkResponse)\n    }\n\n    setUserInfo(profileData) {\n         return fetch(`${this._url}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: profileData.username,\n                about: profileData.userbio,\n            }),\n        })\n            .then(this._checkResponse)\n    }\n\n    addCard(cardData){\n         return fetch(`${this._url}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: cardData.name,\n                link: cardData.link,\n            }),\n        })\n         .then(this._checkResponse)\n    }\n\n    deleteCard(cardData){\n        return  fetch(`${this._url}/cards/${cardData._id}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n        .then(this._checkResponse)\n    }\n\n    likeCard(cardData){\n        return fetch(`${this._url}/cards/likes/${cardData._id}`, {\n            method: 'PUT',\n            headers: this._headers,\n        })\n        .then(this._checkResponse)\n    }\n\n    unlikeCard(cardData){\n        return fetch(`${this._url}/cards/likes/${cardData._id}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n        .then(this._checkResponse)\n    }\n\n    updateAvatar(linkAvatar) {\n        return fetch(`${this._url}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: linkAvatar.link,\n            }),\n        })\n        .then(this._checkResponse)\n    }\n\n\n}","// Подключение к блоку PROFILE\nconst profile = document.querySelector('.profile');\nconst addBtn = profile.querySelector('.profile__add-btn');\nconst editBtn = profile.querySelector('.profile__edit-btn');\nconst profileAvatar = profile.querySelector('.profile__avatar');\nconst btnEditAvatar = profile.querySelector('.profile__edit-avatar-btn');\n\n// Подключение к  меню редактирования профиля\nconst popupProfile = document.querySelector('#edit-popup');\nconst formPopupProfile = popupProfile.querySelector('.popup__form');\nconst inputNamePopupProfile = formPopupProfile.querySelector('#username');\nconst inputBioPopupProfile = formPopupProfile.querySelector('#userbio');\n\n// Подключение к меню создания новой карточки\nconst popupCard = document.querySelector('#add-popup');\nconst formPopupCard = popupCard.querySelector('.popup__form');\n\n// Подключение к меню создания смены аватара\nconst popupUpdateAvatar = document.querySelector('#update-avatar-popup');\nconst formUpdateAvatar = popupUpdateAvatar.querySelector('.popup__form');\n\n// Подключение к карточке\n\n// Конфигурация для валидатора\nconst config = {\n\tformSelector: '.popup__form',\n\tinputSelector: '.popup__input',\n\tsubmitButtonSelector: '.popup__save-btn',\n\tinputErrorClass: 'popup__input_type_error',\n\terrorClass: 'popup__input-error_active',\n};\n\nexport {\n\tprofile,\n\taddBtn,\n\teditBtn,\n\tprofileAvatar,\n\tbtnEditAvatar,\n\tpopupProfile,\n\tformPopupProfile,\n\tinputNamePopupProfile,\n\tinputBioPopupProfile,\n\tpopupCard,\n\tformPopupCard,\n\tpopupUpdateAvatar,\n\tformUpdateAvatar,\n\tconfig,\n}","import './index.css';\nimport Card from '../components/Card.js';\nimport FormValidator from '../components/FormValidator.js';\nimport {Section} from '../components/Section.js';\nimport {PopupWithImage} from '../components/PopupWithImage.js';\nimport {PopupWithForm} from '../components/PopupWithForm.js';\nimport {UserInfo} from '../components/UserInfo.js';\nimport {Api} from \"../components/Api.js\";\n\nimport {\n\taddBtn,\n\tbtnEditAvatar,\n\tconfig,\n\teditBtn,\n\tformPopupCard,\n\tformPopupProfile,\n\tformUpdateAvatar,\n\tinputBioPopupProfile,\n\tinputNamePopupProfile,\n} from '../utils/constants.js'\n\n\n//Настройки API\nconst api = new Api({\n\tbaseUrl: 'https://mesto.nomoreparties.co/v1/cohort-25',\n\theaders: {\n\t\tauthorization: '786b7eb6-0454-4c7c-be53-f59c275d8c34',\n\t\t'Content-Type': 'application/json'\n\t}\n});\n\n\n\nPromise.all([\n\tapi.getUserInfo(),\n\tapi.getInitialCards(),\n])\n.then(([userData, cardData]) => {\n\n\tlet myUserId = null;\n\tmyUserId = userData._id;\n\n\t// Создаем экземпляр класса и передаем селекторы элементов\n\tconst userInfo = new UserInfo({\n\t\tuserNameElement: '.profile__username',\n\t\tuserBioElement: '.profile__userbio',\n\t\tuserAvatarElement: '.profile__avatar',\n\t});\n\n\t// Отрисовка пользовательских данных\n\tuserInfo.setUserInfo(userData.name, userData.about, userData.avatar, userData._id);\n\n\t// Отрисовка секции с карточками\n\tconst cardSection = new Section(\n\t\t{\n\n\t\t\t// Откуда брать данные для карточек\n\t\t\titems: cardData,\n\n\t\t\t// Настройки рендеринга карточек\n\t\t\trenderer: (cardData) => {\n\n\t\t\t\tconst card = createCard(cardData);\n\n\t\t\t\t// Отрисовка карточек\n\t\t\t\tcardSection.appendItem(card);\n\t\t\t},\n\t\t},\n\n\t\t// В какой блок отрисовывать карточки\n\t\t'.photo-grid__elements'\n\t);\n\n\tcardSection.renderAll();\n\n\t// Попап создания новой карточки\n\tconst popupAddCard = new PopupWithForm('#add-popup', (cardData) => {\n\t\tpopupAddCard.submitBtn.textContent = 'Сохранение...';\n\n\t\tapi.addCard(cardData)\n\t\t.then((updateCardData) => {\n\t\t\tconst card = createCard(updateCardData)\n\t\t\tcardSection.prependItem(card);\n\n\t\t\tpopupAddCard.close();\n\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log('Ошибка сервера: ', err)\n\t\t})\n\t\t.finally(() => {\n\t\t\tpopupAddCard.submitBtn.textContent = 'Создать';\n\t\t});\n\t});\n\n\t// Попап редактирования профиля\n\tconst popupEditProfile = new PopupWithForm('#edit-popup', (profileData) => {\n\t\t// Отправляем данные на сервер и изменяем данные профиля в шапке сайта\n\t\tpopupEditProfile.submitBtn.textContent = 'Сохранение...';\n\n\t\tapi.setUserInfo(profileData)\n\t\t.then(() => {\n\t\t\tconsole.log(profileData)\n\t\t\t\tuserInfo.setUserInfo(profileData.username, profileData.userbio );\n\t\t\t\tpopupEditProfile.close();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log('Ошибка сервера: ', err)\n\t\t})\n\t\t.finally(() => {\n\t\t\tpopupEditProfile.submitBtn.textContent = 'Сохранить';\n\t\t})\n\t});\n\n\t// Попап просмотра изображений\n\tconst popupViewImage = new PopupWithImage('#view-popup');\n\tpopupViewImage.setEventListeners();\n\n\t// Попап смены аватара\n\tconst popupUpdateAvatar = new PopupWithForm('#update-avatar-popup', (linkAvatar) => {\n\t\tpopupUpdateAvatar.submitBtn.textContent = 'Сохранение...';\n\n\t\tapi.updateAvatar(linkAvatar)\n\t\t.then(() => {\n\t\t\tuserInfo.setAvatar(linkAvatar.link)\n\t\t\tpopupUpdateAvatar.close();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log('Ошибка сервера: ', err);\n\t\t})\n\n\t\t.finally(() => {\n\t\t\tpopupUpdateAvatar.submitBtn.textContent = 'Сохранить';\n\t\t});\n\t});\n\n\t// Попап подтверждения удаления карточки\n\tconst popupConfirm = new PopupWithForm('#confirm-popup', (confirmData) => {\n\t\tif (confirmData) {\n\t\t\tapi.deleteCard(popupConfirm.data)\n\t\t\t.then(() => {\n\t\t\t\t\tpopupConfirm.card.deleteCard();\n\t\t\t\t\tpopupConfirm.close();\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\n\t\t}\n\t},);\n\n\tfunction createCard (cardData) {\n\t\tconst card = new Card(cardData, myUserId, '#photo-grid-template',\n\n\t\t\t() => {\n\t\t\t\t// Обработчик клика по карточке\n\t\t\t\tpopupViewImage.open(cardData);\n\t\t\t},\n\n\n\t\t\t(cardData) => {\n\n\t\t\t\tpopupConfirm.open();\n\t\t\t\tpopupConfirm.setData(cardData, card);\n\n\t\t\t},\n\n\t\t\t(cardData) => {\n\t\t\t\tapi.likeCard(cardData)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tcard.likesCountElement.textContent = res.likes.length;\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t})\n\t\t\t},\n\n\t\t\t(cardData) => {\n\t\t\t\tapi.unlikeCard(cardData)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconsole.log(res.likes.length)\n\t\t\t\t\tcard.likesCountElement.textContent = res.likes.length;\n\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tcardData.likes.length\n\t\t);\n\n\t\t//Генерируем и возвращаем HTML-элемент\n\t\treturn card.generateCard();\n\t}\n\n\t// ВКЛЮЧЕНИЕ ВАЛИДАЦИИ\n\t// Валидация формы создания карточки\n\tconst formCardElement = new FormValidator(config, formPopupCard);\n\tformCardElement.enableValidation();\n\n\t// Валидация формы редактирования профиля\n\tconst formProfileElement = new FormValidator(config, formPopupProfile);\n\tformProfileElement.enableValidation();\n\n\t// Валидация формы смены аватара\n\tconst formUpdateAvatarElement = new FormValidator(config, formUpdateAvatar);\n\tformUpdateAvatarElement.enableValidation();\n\n\t// ОБРАБОТЧИКИ СОБЫТИЙ\n\t// ---------------------------------------------------------------------\n\n\t// Кнопка Добавить карточку\n\taddBtn.addEventListener('click', function () {\n\t\tpopupAddCard.open();\n\t\tformCardElement.checkButtonState();\n\t\tformCardElement.clearInputsErrors();\n\t});\n\n\t// Кнопка редактировать профиль\n\teditBtn.addEventListener('click', function () {\n\t\tpopupEditProfile.open();\n\n\t\tconst userProfileData = userInfo.getUserInfo();\n\t\tinputNamePopupProfile.value = userProfileData.userName;\n\t\tinputBioPopupProfile.value = userProfileData.userBio;\n\n\t\tformProfileElement.checkButtonState();\n\t\tformProfileElement.clearInputsErrors();\n\t});\n\n\t// Кнопка редактировать аватар\n\tbtnEditAvatar.addEventListener('click', () => {\n\t\tpopupUpdateAvatar.open();\n\t})\n\n})\n.catch((err) => {\n\talert(err);\n})\n\n\n\n\n"],"sourceRoot":""}